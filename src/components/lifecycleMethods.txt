When we create a react component the component goes through several stages in its lifecycle.
React provides us builtin methods that we can overwrite at different stages in its life cycle.
Lifecycle methods are available for the class component not for functional component
There is useEffect hooks that partially relates to the life cycle hooks

The methods are classified in 4 stages
1)Mounting  - > Called when an instance of a component is being created and inserted into th DOM
Methods in Mounting Phase - 
a)constructor
b)static getDerivedStateFromProps
c)render 
d)componentDidMount

METHODS IN THE ORDER THEY ARE INVOKED WHEN THE INSTANCE OF IT IS CREATED OR INSERTED IN DOM
1)constructor(props)  -  A special function that will get called whenever a new component is created
It is used for: - Initializing State 
                  Binding the event Handlers
What not to do in constructor  - Dont use HTTP request in constructor
NOTE: have to call super(props)
      Directly overwrite this.state to change state while in others this.setState is used


2)getDerivedStateFromProps(props,state) this is static method and react documentation classify this method as rarely used life cycle method
Used- When the state of the component depends on chnages in props over time
It is static method so it doesnt have access to the "this" keyuword hence can not call this.setState in this methods
Not to do is: HTTP request



3)render() - only required method in class component
In this method we read props & state and return JSX
not to do : Don not chnage the state or interact with DOM or make ajax calls
Children component lifecycle methods are also executed


4)componentDidMount() - this methods is called only once in whole life cycle.
It is invoked immediately after s component and all its children component have been rendered to the DOM
Causes side effects : Ex interact with a DOM or perform any ajax calls to load data

2)Updating  - > Called when a component is being re-rendered as a result of changes to either its props or state
Methods in Updating Phase - 
a)static getDerivedStateFromProps
b)shouldComponentUpdate
c)render
d)getSnapshotBeforeUpdate
e)componentDidUpdate

METHODS IN THE ORDER THEY ARE INVOKED 
1)static getDerivedStateFromProps(props,state) -Method is called every time a component is re rendered
This method is used when the state depends on the props of the component
This rarely used methods in updating states  and not to do HTTP requests.

2)shouldComponentUpdate(nextProps,nextState) - This methods receives updated props and states
It dictates if the component should re redenderd or not 
This method can prevent that default behaviour by returning false 
using -  comparing existing props and state values with the nextProps and state value and return true or false to let react know whether the component is updated or not 
Used for performance optimization
Avoid to call the setState method and HTTP request
It is rarely used lifecycle method


3)render() - it reads this.props and this.state and return JSX
Avoid changing the state and interacting with the DOM or make ajax calls


4)getSnapshotBeforeUpdate(prevProps,prevState) - It is called right before the changes from the virtual DOM are to be reflected in the DOM
rarely used,It is used to capture some information from the DOM
This method will return null or return a value . Returned value will be passed as the third parameter to the next method

5)componentDidUpdate(prevProps,prevState,snapshot) -  called after the render is finished in the rerender cycles
it is called once in each re-render cycle
Cause side effects - > we can make ajax call but before making call we need to compare the perv props with the new props then decide whether to make ajax call or not if we are not comparing and making unwanted request which is not good idea 


3)Unmounting - > Called when a component is being removed from the DOM
Methods in Unmounting Phase- 
a)componentWillUnmount

METHODS IN THE ORDER THEY ARE INVOKED 
a)componentWillUnmount()  - Method is invol=ked immediately before a component is unmounted and destroyed
Can perform task like - Cancelling any network request, removing event handlers , cancelling any subscriptions and also invalidating timers
Do not call setState method

4)Error Handling  -> Called when there is an error during rendering, in a lifecycle methods,or in the constructor of any child component.
Methods in Error Handling Phase -
a)static getDerivedStateFromError 
b)componentDidCatch

METHODS IN THE ORDER THEY ARE INVOKED 
a)static getDerivedStateFromError 
b)componentDidCatch

this 2 methods are called when there is error either during rendering , in a lifecycle method or in the constructor of any child component.
